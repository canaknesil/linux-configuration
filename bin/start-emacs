#! /bin/bash


HELP_STR="Usage:
  start-emacs -h|--help
  Display help message

  start-emacs --terminal [FILES...]
  New Emacs instance in terminal.

  start-emacs [--bind] [FILES...]
  New Emacs instance in X.

  start-emacs --client --terminal [FILES...]
  New Emacs client frame in terminal.

  start-emacs --client --new-frame [--bind] [FILES...]
  New Emacs client frame in X.

  start-emacs --client [--bind] FILES...
  Open files in the most recently created frame.
  Create new frame if necessary.

  start-emacs --client
  New Emacs client frame in X, if there are no.

Options:
  --bind          Wait for Emacs to finish, either by quiting, or via C-#.
                  If not specified, return immediatelly.

  --client        Start Emacs as client. Start daemon if not running.
                  If not specified, start a new Emacs instance.

  -h, --help      Display help message and exit.

  --new-frame     Always create a new frame.

  --terminal      Start new frame in terminal.
                  If not specified, start new frames in X."


POSITIONAL_ARGS=()

while [[ $# -gt 0 ]]; do
    case $1 in
	--client)
	    OPTARG_CLIENT=YES
	    shift
	    ;;
	# --display)
	#     OPTARG_DISPLAY="$2"
	#     shift
	#     shift
	#     ;;
	--terminal)
	    OPTARG_TERMINAL=YES
	    shift
	    ;;
	--bind)
	    OPTARG_BIND=YES
	    shift
	    ;;
	--new-frame)
	    OPTARG_NEW_FRAME=YES
	    shift
	    ;;
	-h|--help)
	    OPTARG_HELP=YES
	    shift
	    ;;
	-*|--*)
	    echo "Unknown option $1"
	    echo "$HELP_STR"
	    exit 1
	    ;;
	*)
	    POSITIONAL_ARGS+=("$1") # save positional arg
	    shift
	    ;;
    esac
done

FILES=$POSITIONAL_ARGS


if [ "$OPTARG_HELP" = YES ]; then
    echo "$HELP_STR"
    exit
fi


if [ "$(command -v emacsclientw)" ]; then
   ec=emacsclientw # emacsclient as GUI app (on windows)
else
   ec=emacsclient
fi

# From Emacs manual: due to limitations of MS-Windows, Emacs cannot
# have both GUI and text-mode frames in the same session. It also
# cannot open text-mode frames on more than a single Command Prompt
# window, because each Windows program can have only one console at
# any given time. For these reasons, if you invoke emacsclient with
# the -c option, and the Emacs server runs in a text-mode session,
# Emacs will always create a new text-mode frame in the same Command
# Prompt window where it was started; a GUI frame will be created only
# if the server runs in a GUI session. Similarly, if you invoke
# emacsclient with the -t option, Emacs will create a GUI frame if the
# server runs in a GUI session, or a text-mode frame when the session
# runs in text mode in a Command Prompt window.


if [ "$OPTARG_CLIENT" = YES ]; then
    if [ "$OPTARG_TERMINAL" = YES ]; then

	#
	# New Emacs client frame in terminal.
	#
	
	# e --client --terminal
	$ec -a "" -nw $FILES
	
    else
	if [ "$OPTARG_NEW_FRAME" = YES ]; then

	    #
	    # New Emacs client frame in X.
	    #

	    if [ "$OPTARG_BIND" = YES ]; then
		# e --client --new-frame --bind
		$ec -a "" -c $FILES
	    else
		# e --client --new-frame
		$ec -a "" -c -n $FILES
	    fi
	    
	else
	    n_frames=$(emacsclient -e '(seq-length (frame-list))' 2>/dev/null)
	    # n_frames is empty, if server is not running.
	    # n_frames is 1, if server is running but no frames were made (except for the server frame which is hidden).
	    # n_frames is 2 or more, if server is running and there is at least one visible frame.
	    
	    if [ "${FILES[*]}" ]; then

		#
		# Open files in the most recently created frame. Create new frame if necessary.
		#
		
		if [ "$OPTARG_BIND" = YES ]; then
		    # e --client --bind FILES...
		    if [ ! $n_frames ]; then
			$ec -a "" -c  $FILES
		    elif [ $n_frames -lt 2 ]; then
			$ec -a "" -c  $FILES
		    else
			$ec -a "" $FILES
		    fi
		else
		    # e --client FILES...
		    if [ ! $n_frames ]; then
			$ec -a "" -c -n $FILES
 		    elif [ $n_frames -lt 2 ]; then
 			$ec -a "" -c -n $FILES
 		    else
			$ec -a "" -n $FILES
 		    fi
		fi
		
	    else

		#
		# New Emacs client frame in X, if there are no.
		#
		
		# e --client
		if [ ! $n_frames ]; then
		    $ec -a "" -c -n
		elif [ $n_frames -lt 2 ]; then
		    $ec -a "" -c -n
		else
		    echo "There is already an existing Emacs client frame."
		fi
		
	    fi
	    
	fi
    fi
else
    if [ "$OPTARG_TERMINAL" = YES ]; then

	# 
	# New Emacs instance in terminal.
	#
	
	# e --terminal
	emacs -nw $FILES
	
    else

	# 
	# New Emacs instance in X.
	#
	
	if [ "$OPTARG_BIND" = YES ]; then
	    # e --bind
	    emacs $FILES
	else
	    # e
	    if [ "$(command -v runemacs)" ]; then
		runemacs $FILES
	    else
		emacs $FILES 2>&1 >/dev/null & disown
		# On Windows, above command leavs the shell currupted.
	    fi
	fi
	
    fi
fi
