#+TITLE: Emacs Cheat Sheet
#+AUTHOR: Can Aknesil
#+STARTUP: content
#+OPTIONS: toc:nil \n:t

Made according to Emacs manual version 29.1.

* When in trouble
** Help and documentation lookup

C-h k describe-key
C-h c describe-key-briefly
C-h f describe-function
C-h v describe-variable
C-h o describe-symbol
C-h P describe-package
C-h m describe-mode
C-h b describe-bindings
C-h l view-lossage

M-x eldoc-doc-buffer

C-h S info-lookup-symbol
M-x info-lookup-file

** Undo

C-/
C-x u
C-_   undo

C-? undo-redo

** Canceling

C-g
ESC ESC ESC keyboard-quit
C-g C-g (emergency escape in case first C-g didn't respond)

** Quitting

C-x C-c save-buffers-kill-terminal
M-x kill-emacs


* Navigation
** Basic motion

C-f forward-char
C-b backward-char
C-n next-line
C-p previous-line

C-a move-beginning-of-line
C-e move-end-of-line

M-f forward-word
M-b backward-word

M-a backward-sentence
M-e forward-sentence

M-} forward-paragraph
M-{ backword-paragraph

C-M-a beginning-of-defun
C-M-e end-of-defun

C-M-f forward-sexp
C-M-b backward-sexp
C-M-n forward-list
C-M-p backward-list
C-M-u backward-up-list
C-M-d down-list

M-< beginning-of-buffer
M-> end-of-buffer

** Basic scrolling

C-v scroll-up-command
M-v scroll-down-command

C-M-v scroll-other-window
C-M-SHIFT-v scroll-other-window-down
C-M-SHIFT-l recenter-other-window

C-l recenter-top-bottom
C-M-l reposition-window

** Avy (package)

C-: avy-goto-char
C-' avy-goto-char-2
M-g f avy goto-line
M-g w avy goto-word-1

** Search

C-s isearch-forward
C-r isearch-backward
C-s C-s (repeat previous search)
C-r C-r (repeat previous search)

M-s w isearch-forward-word
M-s _ isearch-forward-symbol
M-s . isearch-forward-symbol-at-point

C-M-s isearch-forward-regexp
C-M-r isearch-backward-regexp

M-r isearch-toggle-regexp (within isearch)

M-s o occur

M-g i imenu

C-x p g project-find-regexp

M-x project-search

** Grep

M-x grep
M-x find-grep

M-x lgrep
M-x rgrep
M-x zrgrep

M-x kill-grep

For grep buffer commands, see the manual.

** Ring navigation (go to and back)

C-SPC C-SPC (push to mark ring)
C-u C-SPC (return to last mark)
C-x C-SPC pop-global-mark

M-g M-g goto-line

M-. xref-find-definitions
C-u M-. (xref-find-definitions with custom identifier)
C-M-. xref-find-apropos
C-x 4 . xref-find-definitions-other-window
C-x 5 . xref-find-definitions-other-frame

M-? xref-find-references
C-u M-? (xref-find-references with custom identifier)

r
M-x xref-query-replace-in-results

M-, xref-go-back
C-M-, xref-go-forward

For xref buffer commands, see the manual.

** Recursive editing

C-M-c exit-recursive-edit
C-] abort-recursive-edit

M-x top-level

M-x fileloop-continue

** Semantic mode

See the manual.

** Diff and merging

M-x diff
M-x ediff
M-x diff-backup
M-x diff-buffer-with-file
M-x diff-buffers

C-x v = vc-diff
C-x v D vc-root-diff

M-x smerge-mode

** Files

C-x C-f find-file
C-x C-r find-file-read-only
C-x C-v find-alternate-file
C-x 4 f find-file-other-window
C-x 4 r find-file-read-only-other-window
C-x 5 f find-file-other-frame
C-x 5 r find-file-read-only-other-frame

C-x p f project-find-file

C-x C-s save-buffer
C-x C-w write-file

C-x i insert-file
M-x write-region

M-x revert-buffer
M-x auto-revert-mode

M-x recover-file
M-x recover-session

** Find file at point (ffap)

See the manual.

** File name cache

See the manual.

** Clickable links

M-x goto-address-mode
C-c ENTER goto-address-at-point

M-x browse-url
M-x browse-url-at-point

** Directories

C-x C-d list-directory

C-x d dired
C-x 4 d dired-other-window
C-x 5 d dired-other-frame
C-x C-j dired-jump
C-x 4 C-j dired-jump-other-window
C-u ... (invoke dired with custom switches to ls)

For dired buffer commands, see the manual.

** Buffers

C-x b switch-to-buffer
C-x 4 b switch-to-buffer-other-window
C-x 5 b switch-to-buffer-other-frame
C-x LEFT previous-buffer
C-x RIGHT next-buffer

C-x p b project-switch-buffer

C-x C-b list-buffers
C-x p C-b project-list-buffers

C-u C-x C-b (list only file visiting buffers)

C-x C-q read-only-mode

C-x k kill-buffer
M-x kill-some-buffers
C-x p k project-kill-buffers

** Projcets

C-x p p project-switch-project
M-x project-forget-project

** Emacs development environment

See the manual.

** Windows

C-x 0 delete-window
C-x 1 delete-other-window
C-x 2 split-window-below
C-x 3 split-window-right
C-x 4 0 kill-buffer-and-window

C-x o other-window

C-x 4 4 other-window-prefix
C-x 4 1 same-window-prefix

SHIFT-LEFT windmove-left
SHIFT-RIGHT windmove-right
SHIFT-UP windmove-up
SHIFT-DOWN windmove-down

C-x SHIFT-LEFT windmove-delete-left
C-x SHIFT-RIGHT windmove-delete-right
C-x SHIFT-UP windmove-delete-up
C-x SHIFT-DOWN windmove-delete-down

C-c LEFT winner-undo
C-c RIGHT winner-redo

M-x window-swap-states

** Transform frame (package)

M-x transpose-frame
M-x flip-frame
M-x flop-frame
M-x rotate-frame
M-x rotate-frame-clockwise
M-x rotate-frame-anticlockwise

** Frames

C-x 5 2 make-frame-command
C-x 5 c clone-frame

C-x 5 0 delete-frame
C-z suspend-frame

C-x 5 o other-frame
C-x 5 1 delete-other-frames

C-x 5 5 other-frame-prefix

M-F10 toggle-frame-maximized
F11 toggle-frame-fullscreen

** Saving Emacs sessions

See the manual.

** Tab lines

See the manual.

** Tab bars

See the manual.

** Speedbar

See the manual.

** Indirect buffers

See the manual.

** Follow mode

M-x follow-mode

** Line truncation and visual line mode

C-x x t toggle-truncate-lines
M-x visual-line-mode

** Narrowing

See the manual.

** View Mode

See the manual.


* Editing
** Deletion, killing, and yanking

BACKSPACE delete-backward-char
C-d delete-char

C-k kill-line
C-SHIFT-BACKSPACE kill-whole-line

M-BACKSPACE backward-kill-word
M-d kill-word

C-M-k kill-sexp

C-w kill-region
M-w kill-ring-save

C-y yank
M-y yank-pop
C-u C-y (yank and leave point at the beginning)
C-u M-y (yank-pop and leave point at the beginning)

** Overwrite mode (Insert)

M-x overwrite-mode
M-x binary-overwrite-mode

** Region (selection)

C-SPC set-mark-command
C-x C-x exchange-mark-and-point

M-h mark-paragraph
C-M-h mark-defun
C-x h mark-whole-buffer

** Blank lines and whitespace

C-o open-line
C-M-o split-line

M-\ delete-horizontal-space
M-SPC just-one-space
C-x C-o delete-blank-lines
M-^ delete-indentation
M-x delete-trailing-whitespace

** Indentation

TAB indent-for-tab-command
M-m back-to-indentation
C-q TAB (insert TAB character)

C-M-\ indent-region
C-M-q prog-indent-sexp

M-x indent-relative
M-^ delete-indentation

** Replacement

M-x replace-string
M-% query-replace

M-x replace-regexp
C-M-% query-replace-regexp

C-x p r project-query-replace-regexp

M-x xref-find-references-and-replace

** Repetition, and keyboard macro

C-u <n>... <command>
C-x z [z...] repeat

C-x ( kmacro-start-macro
C-x ) kmacro-end-macro
C-x e [e...] kmacro-end-and-call-macro

** Rectangles

C-x r t string-rectangle

C-x r k kill-rectangle
C-x r c clear-rectangle

C-x r M-w copy-rectangle-as-kill
C-x r y yank-rectangle

** Correcting spelling

M-$ ispell-word
M-x ispell
M-x ispell-comments-and-strings

** Filling text

M-q fill-paragraph
M-x fill-region
M-x fill-region-as-paragraph

C-x . set-fill-prefix

M-x center-line
M-x center-region
M-x center-paragraph

** Comments

M-; comment-dwin
C-x C-; comment-line
C-u M-; comment-kill

M-x comment-region
M-x uncomment-region

M-j indent-new-comment-line

** Smart insertion

C-x r N rectangle-number-lines
C-u C-x r N (rectangle-number-lines custom initial number and format string)

** Completion

C-M-i completion-at-point

** Abbrevs

See the manual.

** Case conversion

M-l downcase-word
M-u upcase-word
M-c capitalize-word

C-x C-l downcase-region
C-x C-u upcase-region
M-x capitalize-region

** Sorting text

M-x sort-lines
C-u M-x sort-lines (sort-lines in descending order)
M-x sort-paragraphs
M-x sort-fields
C-u <n> M-x sort-fields (sort acc. to nth field)
M-x sort-columns
C-u M-x sort-columns (sort-columns in descending order)
M-x sort-numeric-fields

M-x reverse-region

** Transposing text

See the manual.

** Parentheses

M-x check-parens

** Hideshow

See the manual.

** Binary files

M-x hexl-find-file
M-x hexl-mode
C-c C-c (in hexl mode, leave)

For hexl mode commands, see the manual.

** Highlighting

See the manual.

** Accumulating text

See the manual.

** Registers

See the manual.

** Bookmarks

See the manual.

** Merging

M-x smerge-mode

** Pages

See the manual.

** Enriched text

See the manual.

** Text-based tables

See the manual.

** Two-column editing

See the manual.


* Inside minibuffer
** General

M-p previous-history-element
M-n next-history-element

** Ivy

M-r ivy-toggle-regexp-quote
C-M-j ivy-immediate-done

* Interractive programming
** Compilation

M-x compile
M-x recompile
M-x kill-compilation

C-x p c project-compile

For compilation mode commands, see the manual.

** Lisp execution

M-x load-file
M-x load-library

M-: eval-expression
C-x C-e eval-last-sexp
C-M-x eval-defun
M-x eval-region
M-x eval-buffer

M-x lisp-interaction-mode
M-x scratch-buffer
C-j eval-print-last-sexp

M-x ielm

M-x run-lisp
M-x run-scheme

** Variables

M-x set-variable
M-n (insert the old value when using set-variable)

M-x make-local-variable
M-x make-variable-buffer-local
M-x kill-local-variable

** Local variables per file/directory/connection

See the manual.

** Key bindings

M-x keymap-global-set
M-x keymap-global-unset
M-x keymap-local-set
M-x keymap-local-unset

In Init file, use keymap-global-set and keymap-set.

#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-z") 'shell)

  (add-hook 'texinfo-mode-hook
	    (lambda ()
	      (keymap-set texinfo-mode-map "C-c p" 'backward-paragraph)))
#+END_SRC

C-<key> (Control-<key>)
C-x c <key>

M-<key> (Meta-<key>)
C-x m <key>

S-<key> (Shift-<key>)
C-x S <key>

H-<key> (Hyper-<key>)
C-x @ h <key>

s-<key> (Super-<key>)
C-x @ s <key>

A-<key> (Alt-<key>)
C-x @ a <key>

For disabling a command, see the manual.

** Running shell commands

M-! shell-command
C-u M-! (insert output of shell-command to point)
M-| shell-command-on-region
M-& async-shell-command

M-x shell

For shell buffer commands, see the manual.

M-x term
C-c C-j term-line-mode
C-c C-k term-char-mode

C-c C-c (in term char mode, sends C-c to terminal)
C-c <char> (in term char mode, acts as C-x <char>)
C-c <key> (in term char mode, C-c is escape character for emacs commands)

C-c C-q term-pager-toggle

M-x serial-term

** Packages

M-x list-packages

For packages buffer commands, see the manual.

M-x package-install
M-x package-upgrade
M-x package-upgrade-all

M-x package-refresh-contents

M-x package-import-keyring

For use-package, see the manual.

** Customize

See the manual.

** Flymake

See the manual.

** Running debuggers

See the manual.


* Version control
** VC

See the manual.


* Organization
** Calendar and diary

M-x calendar
C-u M-x calendar (invoke calendar with custom date)

For calendar commands, see the manual.

For diary, see the manual.

** Sending and reading mail

See the manual.

** Reading and posting news

See the manual.


* Miscellaneous 

** Word count

M-= count-words-region
M-x count-words

** Document viewing (PDF, OpenDocument, Microsoft Office, etc.)

See the manual.

** Emacs server

M-x server-start

C-x # server-edit
M-x server-edit-abort

M-x kill-emacs

** Printing

M-x print-buffer
M-x lpr-buffer
M-x print-region
M-x lpr-region

M-x htmlfontify-buffer

For printing .org files, see the manual.

For PostScript hardcopy, see the manual.

** Web browsing

See the manual.


* TODO

Push and pop location in a unified way. Return from xref definition,
return from previous mark, etc.

Completion pop-up location sometimes cover the text I read. If aborted
with C-g, it still pops up after restarting typing.

highlight-regexp and unhighlight-regexp

Emacs pull request scroll-margin > 0 together with follow-mode.

Syntax of regular expressions.

Many commands opens a buffer in other window but not move to it, such
as list-buffers. Moving to the newly opened buffer is often the
desired behavior.

Switch to *occur* buffer after creation.

Documentation page Choosing a "Window for Displaying a Buffer":
https://www.gnu.org/software/emacs/manual/html_node/elisp/Choosing-Window.html

ediff control panel opens as a new frame, rather than a secondary echo
area/minibuffer.

Sometimes when the point is at the end of a line, the line shifts
right by one column (line number included). Prevent it. In org-mode.

undelete-frame-mode (version 29 or higher) to undelete recently
deleted frames with C-x 5 u.

Desktop library to save and restore sessions. I don't want automatic
restoring at startup. I only want the option to call smt like
restore-session in case I unintentionally quit Emacs, or kill frame.

Some messages in echo area disappears after some seconds. Disable this
(or extend the duration) so that I can take as much time as possible
when reading it.

Configure/learn tab bars (similar to i3 workspaces) not to use the bar
but be accessible via commands.

Non-agressive parenthesis insertion. For example, I don't want the
closing paranthesis to be inserted after I type the openning
paranthesis; but I want emacs to put closing paranthesis to the third
line, put the point to the second line and indent.

Text alighment left (default with M-q), center, and right. Solution
for center: M-x center-{line,region,paragraph}.

Org mode manual.

Tex mode vs auctex.

Make M-; insert the comment after a single space, rather than a
TAB-like distance.

Disable electric layout mode for any buffer. Some modes, such as C and
Verilog, enables this by default, which is very annoying.

Hideshow mode vs selective display vs outline mode vs foldout package.

Treemacs vs built-in speedbar. 

Don't highlight spelling errors when mouse is on it. Try: change face
or mouse hover to a less visible one.

Update start-emacs according to emacsclient options in
manual. --reuse-frame

Revise emacs.org to replace features provided via packages with
built-in ones.

setq vs setq-default in init file. Check each modified variable
weather they are global or buffer local.

Parent-child mode tree.

Is dumb-jump necessary?

When selecting an identifier, also highlight others.

Open files read-only with emacs-start.

Are auto-compile and prefer new necessary?

Page forward/backward etc. It is useful to navigate in the help buffer
created via C-h m.


* DONE

A better way to scroll/find/go to a location outside the
window. Scrolling is only useful when I want to skim/scan a file top
to bottom, otherwise it is very distracting and tiring. Solution:
forward and backward search.

Built-in features as alternative to helpful features, such as list of
references, source code, etc. Solution: Clicking the source file
brings you there. Use M-? xref-find-references to find references once
in the source file.

Goto help at point, like 'M-.'. And return, like 'M-,'. Solution: When
help commands are invoked, the default entry is usually the thing at
point.

Isearch forward and backward together. Solution: swiper, or go to
beginning of buffer and search from there. Afterwords return with C-u
C-SPACE.

Key sequence to string to be used in keymap(-global)-set. Solution:
C-h c

Stop Ivy matching when necessary. For example, there is an existing
file design-top.v, typing C-x C-f top.v ENTER opens design-top.v
rather than creating top.v. Solution: C-M-j

Easier way to cancel completion when tying. For example, I want to
type "buffer" and press ENTER, the completion suggests "buffers". The
ENTER selects the undesired suggestion rather than opening a new
line. One option is to hit SPACE and then ENTER, which leaves a
training space to the previous line. Solution: using M-p, M-n, M-RET
in company buffer.

Save as another file with single command. write-file reuses the
current buffer. Not an important improvement. Either do
mark-whole-buffer followed by find-file and yand. Or find-file and
than insert-file.

Change tiling of windows from vertical to horizontal and vice
versa. Solution: transpose-frame package

goto-line in another buffer. Buffer and number should be entered
anyway. Use compile buffers if necessary.

